//
//  TownInteractor.swift
//  weather
//
//  Created Z on 6/11/19.
//  Copyright © 2019 Zyma. All rights reserved.
//
//  Template generated by Juanpe Catalán @JuanpeCMiOS
//

import Foundation
import RealmSwift

class TownInteractorDB: TownInteractorDBProtocol {
    weak var presenter: TownPresenterProtocol?
    
    func addItem(item: TownItemDB, completion: @escaping (String?)->()) {
        DispatchQueue.main.async {
            TownDataBase.shared.write() { (realm: Realm) in
                realm.add(item)
            }
            completion(item.nameTown)
        }
    }
    
    func getItems(completion: @escaping ([TownItemDB]?)->()) {
        DispatchQueue.main.async {
            guard let realm = TownDataBase.shared.uiRealm else {
                self.error(text: "Error load towns")
                return
            }
            let townsDB = realm.objects(TownItemDB.self).sorted(by: { (lhsData, rhsData) -> Bool in
                return lhsData.nameTown > rhsData.nameTown
            })
            completion(townsDB)
        }
    }
    
    func error(text: String) {
        self.presenter?.error(text: text)
    }
}

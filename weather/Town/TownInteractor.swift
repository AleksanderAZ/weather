//
//  TownInteractor.swift
//  weather
//
//  Created Z on 6/11/19.
//  Copyright © 2019 Zyma. All rights reserved.
//
//  Template generated by Juanpe Catalán @JuanpeCMiOS
//

import UIKit

class TownInteractor: TownInteractorProtocol {

    weak var presenter: TownPresenterProtocol?
    
    let townDataBase: TownDataBaseProtocol = TownDataBase()
    
    private var townModel: [TownModel]?  = [TownModel]()
    
    func loadTown(completion: @escaping ([TownModel]?)->()) {
        
        let count = townDataBase.count()
        townModel?.removeAll()
        for index in 0..<count {
            let item = townDataBase.getItem(index: index)
            townModel?.append(TownModel(name: item, temperature:String(20+index), townFullInfo: "Additional information: x=1 y=2 reg=xxxxxxxxxxxxxxxxx", typeInfo: false))
        }
        completion(townModel)
    }
    
    func getTown(completion: @escaping ([TownModel]?)->()) {
        
        if let townModel = self.townModel {
            completion(townModel)
        }
        else {
            self.loadTown() { [weak self] (towns: [TownModel]?) in
                self?.townModel = towns
                completion(towns)
            }
        }
    }
    
    func addTown(name: String, completion: @escaping ([TownModel]?)->()) {
        
        let itemsTowns = self.townModel?.filter { (item) in
            guard let itemName = item.name else { return false }
            return (name == itemName)
        }
        
        let isTowns = itemsTowns?.count
        
        if  isTowns == 0 {
            townDataBase.addItem(item: name)
            self.loadTown() { [weak self] (towns: [TownModel]?) in
                self?.townModel = towns
                completion(towns)
            }
        }
    }
}

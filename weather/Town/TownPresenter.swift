//
//  TownPresenter.swift
//  weather
//
//  Created Z on 6/11/19.
//  Copyright © 2019 Zyma. All rights reserved.
//
//  Template generated by Juanpe Catalán @JuanpeCMiOS
//

import UIKit

class TownPresenter: TownPresenterProtocol {

    
    var townModel: [TownModel]?
    
    weak private var view: TownViewProtocol?
    var interactor: TownInteractorProtocol?
    private let router: TownWireframeProtocol
    private var filtr: String?
    
    
    init(interface: TownViewProtocol, interactor: TownInteractorProtocol?, router: TownWireframeProtocol) {
        
        self.view = interface
        self.interactor = interactor
        self.router = router
        


     //   self.addTown(townName: "Vinnitsa")
     //   self.addTown(townName: "Kiev")
        self.loadData(filtr: nil)
    }

    func updata(towns: [TownModel]?) {
        self.townModel = towns
        if filtr != nil && filtr != "" {
            self.townModel = self.townModel?.filter { (item) in
                guard let name = item.name else { return false }
                guard let filtr = filtr else { return false }
                return name.contains(filtr)
            }
        }
        self.view?.update()
    }
    
    
    func loadData(filtr: String?) {
       self.filtr = filtr
       interactor?.getTown() { [weak self] (towns: [TownModel]?) in
            self?.updata(towns: towns)
       }
    }
    
    func count()->Int? {
        return townModel?.count
    }
    
    func getTextTownInfo(index: Int)->(String, String) {
        
        let town = townModel?[index].name ?? ""
        let tempr = townModel?[index].temperature ?? ""
        
        if !(getTypeTownInfo(index: index)) {
            return (town, " " + tempr)
        }
        else {
            let info = townModel?[index].townFullInfo ?? ""
            return (town, " " + tempr + "\n" + info)
        }
    }
    
    func getTypeTownInfo(index: Int)->Bool {
       let type = townModel?[index].typeInfo ?? false
        return type
    }
    
    func actionCellButton(index: Int?) {
        guard let index = index else { return }
        guard let type = townModel?[index].typeInfo else { return }
        if type {
           townModel?[index].typeInfo = false
        } else {
           townModel?[index].typeInfo = true
        }
        self.view?.update()
    }
    
    func showWeatherView(indexCell: Int) {
        guard let nameTown = townModel?[indexCell].name else { return }
        router.showWeatherView(nameTown: nameTown)
    }

    func choiceTown(townName: String?) {
        loadData(filtr: townName)
    }

    func addTown(townName: String?) {
        guard let name = townName else { return }
        if name != "" {
            interactor?.addTown(name: name)
        }
    }
    
    deinit {
        townModel?.removeAll()
    }
}

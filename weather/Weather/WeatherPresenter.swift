//
//  WeatherPresenter.swift
//  weather
//
//  Created Z on 6/11/19.
//  Copyright © 2019 Zyma. All rights reserved.
//
//  Template generated by Juanpe Catalán @JuanpeCMiOS
//

import UIKit

class WeatherPresenter: WeatherPresenterProtocol {

    weak private var view: WeatherViewProtocol?
    var interactor: WeatherInteractorProtocol?
    private let router: WeatherWireframeProtocol
    
    var nameTown: String?
    var weatherModel: [WeatherModel]?
    
    init(interface: WeatherViewProtocol, interactor: WeatherInteractorProtocol?, router: WeatherWireframeProtocol) {
        self.view = interface
        self.interactor = interactor
        self.router = router

    }
    
    func updata(weather: [WeatherModel]?) {
        self.weatherModel = weather
        print(weather)
        self.view?.update()
    }
    
    
    func loadData() {
        guard let name = self.nameTown else { return }
        interactor?.loadInfo(nameTown: name) { [weak self] (result: [WeatherModel]?) in
             self?.updata(weather: result)
        }
    }
    
    
    func count()->Int? {
        return weatherModel?.count
    }
    
    func getTitle()->String {
        
        let title = nameTown ?? ""
        return title
    }
    
    func getTextWeatherInfo(index: Int)->String {
        
        let weatherForecast = (weatherModel?[index].weatherForecast ?? "")
        return weatherForecast
    }
    
    deinit {
        weatherModel?.removeAll()
    }
}

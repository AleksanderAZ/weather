//
//  WeatherPresenter.swift
//  weather
//
//  Created Z on 6/11/19.
//  Copyright © 2019 Zyma. All rights reserved.
//
//  Template generated by Juanpe Catalán @JuanpeCMiOS
//

import UIKit

class ForecastPresenter: WeatherPresenterProtocol {
    weak private var view: WeatherViewProtocol?
    var interactor: WeatherInteractorProtocol?
    private let router: WeatherWireframeProtocol
    var nameTown: String?
    var weatherModel: [ForecastModel]?
    
    init(interface: WeatherViewProtocol, interactor: WeatherInteractorProtocol?, router: WeatherWireframeProtocol) {
        self.view = interface
        self.interactor = interactor
        self.router = router
    }
    
    func updata(weather: [ForecastModel]?) {
        self.weatherModel = weather
        self.view?.update()
    }
    
    func loadData() {
        guard let name = self.nameTown else { return }
        self.loadInfo(nameTown: name) { [weak self] (result: [ForecastModel]?) in
             self?.updata(weather: result)
        }
    }
    
    func count()->Int? {
        return weatherModel?.count
    }
    
    func getTitle()->String {
        let title = nameTown ?? ""
        return title
    }
    
    func getTextWeatherInfo(index: Int)->String {
        let weatherForecast = (weatherModel?[index].forecast ?? "")
        return weatherForecast
    }
    
    func error(text: String) {
        self.view?.showError(text: text)
    }
    
    func loadInfo(nameTown: String, completion: @escaping ([ForecastModel]?)->()) {
        interactor?.loadAPIRequestWeather(nameTown: nameTown) { [weak self] (result: ForecastAPIModel?) in
            guard let list = result?.list else { return }
            let count = list.count
            var weatherModel = [ForecastModel]()
            var date: String = ""
            var tempr: String = ""
            var rain: String = "0"
            var main: String = ""
            
            for i in 0..<count {
                date = list[i].dtTxt ?? ""
                if let m = list[i].weather?[0].main?.description {
                    main = m
                }
                if let r = list[i].rain?.the3H {
                    rain = String(describing:  r)
                }
                if let t = list[i].main?.temp {
                    tempr = String(t)
                }
                
                let text = "For time: " + date + "\n" +  "tempr - " + tempr + "C,\nmain - " + main + ",\nrain - " + rain + "%"
                weatherModel.append(ForecastModel(forecast: text))
            }
            completion(weatherModel)
        }
    }
    
    deinit {
        weatherModel?.removeAll()
    }
}
